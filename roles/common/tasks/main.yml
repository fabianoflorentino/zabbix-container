---
- name: Ajustando o Hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: "Atualizando /etc/hosts - {{ inventory_hostname }}"
  lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item]['ansible_host'] }} {{ hostvars[item]['inventory_hostname'] }}"
  loop: "{{ groups['all'] }}"

- sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Preparando o sistema operacional
  block:
    - name: Atualizando o Sistema
      yum:
        name: "*"
        state: latest
      ignore_errors: yes

    - name: Instalando pacotes essenciais
      yum:
        name:  "{{ item }}"
        state: present
      loop: "{{ packages.to_install }}"
      ignore_errors: yes

- name: Python
  block:
    - name: Instalando Python Pip
      yum:
        name: "{{ item }}"
        state: present
      loop: "{{ python.package }}"
    
    - name: Instalando Docker Pip (SDK)
      pip:
        name: "{{ item }}"
      loop: "{{ python.pip }}"
  rescue:
    - name: Download dos pacotes do Python Pip localmente
      get_url:
        url: "{{ python2_pip_offline_url }}"
        dest: ./roles/common/files/
        validate_certs: no
      delegate_to: localhost

    - name: Copiando os pacotes do python
      unarchive:
        src: python2-pip.tgz
        dest: /tmp
        
    - name: Instalando os pacotes do Python Pip
      yum:
        name: "/tmp/python2-pip/{{ item }}"
        state: present
      loop: "{{ python2_pip_offline.packages }}"

    - name: Removendo os pacotes de instalacao do Pyhton Pip
      file:
        path: /tmp/python2-pip
        state: absent
  when:
    - (ansible_os_family == 'RedHat')

- name: Docker
  block:
    - name: Verificando pre requisitos
      package_facts:
        manager: auto

    - name: Verificando se o repositório Docker existe
      stat:
        path: "{{ path_docker_repo }}"
      register: docker_repo

    - name: Habilitando o Repositório do Docker
      yum_repository:
        name: docker
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
        gpgcheck: yes
        enabled: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
      when:
        - (docker_repo.stat.exists == false)

    - name: Instalando Docker
      yum:
        name:  docker-ce
        state: present

    - name: Habilitando o Servico do Docker
      systemd:
        name: docker
        enabled: yes
        state: started    
  rescue:
    - name: Download dos pacotes do Docker localmente
      get_url:
        url: "{{ docker_offline_url }}"
        dest: ./roles/common/files/
        validate_certs: no
      delegate_to: localhost
      
    - name: Copiando os pacotes do Docker
      unarchive:
        src: docker-ce-1903.tgz
        dest: /tmp/
    
    - name: Instalando os pacotes do Docker
      yum:
        name: "/tmp/docker-ce/{{ item }}"
        state: present
      loop: "{{ docker_offline.packages }}"
    
    - name: Habilitando o Servico do Docker
      systemd:
        name: docker
        enabled: yes
        state: started
    
    - name: Removendo os pacotes de instalacao do Docker
      file:
        path: /tmp/docker-ce
        state: absent
  when:
    - (ansible_os_family == 'RedHat')