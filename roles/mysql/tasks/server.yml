---
- name: "{{ mysql_container_name }} - Verificando se o container existe"
  docker_container_info:
    name: "{{ mysql_container_name }}"
  register: mysql_server_result

- name: MySQL Server
  block:
    - name: "{{ mysql_container_name }} - Dockerhub"
      docker_image:
        name: "{{ mysql_image }}"
        source: pull

    - name: "{{ mysql_container_name }} - Iniciando o Container"
      docker_container:
        name: mysql-server
        image: "{{ mysql_image }}"
        state: started
        recreate: yes
        restart: yes
        restart_policy: unless-stopped
        command: "{{ mysql_command }}"
        env:
          MYSQL_DATABASE: "{{ mysql_zbx_db }}"
          MYSQL_USER: "{{ mysql_zbx_db_user }}"
          MYSQL_PASSWORD: "{{ mysql_zbx_db_pwd }}"
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pwd }}"
  rescue:
    - name: "{{ mysql_container_name }} - Baixando a imagem do Dockerhub"
      docker_image:
        name: "{{ mysql_image }}"
        source: pull
      delegate_to: localhost

    - name: "{{ mysql_container_name }} - Savando a Imagem localmente"
      shell: |
        docker save -o "./roles/mysql/files/{{ mysql_image_tar }}" "{{ mysql_image }}"
      delegate_to: localhost

    - name: "{{ mysql_container_name }} - Enviando a Imagem"
      copy:
        src: "{{ mysql_image_tar }}"
        dest: "{{ mysql_file_dest }}"

    - name: "{{ mysql_container_name }} - Carregando Imagem"
      docker_image:
        name: mysql
        load_path: "{{ mysql_file_dest }}"
        source: load

    - name: "{{ mysql_container_name }} - Iniciando o Container"
      docker_container:
        name: mysql-server
        image: "{{ mysql_image }}"
        state: started
        recreate: yes
        restart: yes
        restart_policy: unless-stopped
        command: "{{ mysql_command }}"
        env:
          MYSQL_DATABASE: "{{ mysql_zbx_db }}"
          MYSQL_USER: "{{ mysql_zbx_db_user }}"
          MYSQL_PASSWORD: "{{ mysql_zbx_db_pwd }}"
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pwd }}"

    - name: "{{ mysql_container_name }} - Removendo arquivos de imagens tempor√°rios"
      file:
        path: "{{ mysql_file_dest }}"
        state: absent
  when:    
    - (mysql_server_result.exists != true)